@page "/"
@using Lenia.Client.Components
@implements IDisposable

<PageTitle>Lenia</PageTitle>

<MudLayout>
    <MudAppBar Fixed="true" Dense="true" Elevation="2">
        <MudIcon Icon="@Icons.Material.Filled.Biotech" Style="margin-right: 10px;" />
        <MudText Typo="Typo.h6">Lenia - Artificial Life Simulation</MudText>
        <MudSpacer />
        <MudChip T="string" 
                 Icon="@Icons.Material.Filled.Speed" 
                 Color="Color.Success" 
                 Size="Size.Small" 
                 Variant="Variant.Text">
            @actualFps.ToString("F0") FPS
        </MudChip>
        <MudIconButton Icon="@(isRunning ? Icons.Material.Filled.Pause : Icons.Material.Filled.PlayArrow)"
                       Color="@(isRunning ? Color.Warning : Color.Success)" 
                       Size="Size.Large"
                       OnClick="TogglePlayPause" />
    </MudAppBar>
    
    <MudMainContent Class="pa-0">
        <MudContainer MaxWidth="MaxWidth.False" Class="pa-4 mt-4">
    <MudGrid>
        <MudItem xs="12" md="8">
            <MudPaper Elevation="2" Class="pa-4">
                <LeniaCanvas @ref="leniaCanvas" Width="600" Height="600" Lenia="lenia" />
            </MudPaper>
        </MudItem>
        
        <MudItem xs="12" lg="4">
            <MudPaper Elevation="2" Class="pa-0" Style="height: calc(100vh - 120px); overflow-y: auto;">
                <MudStack Spacing="0">
                    <MudPaper Elevation="1" Class="pa-4">
                        <MudText Typo="Typo.h6">
                            <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-2" />
                            Controls
                        </MudText>
                    </MudPaper>
                    
                    <div Class="pa-4">
                    <MudStack Spacing="4">
                        
                        <!-- Quick Actions -->
                        <MudCard Elevation="1">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">
                                        <MudIcon Icon="@Icons.Material.Filled.PlayCircleOutline" Class="mr-2" />
                                        Actions
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudStack Row Spacing="2" Justify="Justify.SpaceEvenly">
                                    <MudButton Variant="Variant.Outlined" 
                                               StartIcon="@Icons.Material.Filled.Refresh"
                                               Color="Color.Secondary"
                                               Size="Size.Small"
                                               OnClick="Reset">
                                        Reset
                                    </MudButton>
                                    <MudButton Variant="Variant.Outlined" 
                                               StartIcon="@Icons.Material.Filled.Clear"
                                               Color="Color.Warning"
                                               Size="Size.Small"
                                               OnClick="() => lenia.Clear()">
                                        Clear
                                    </MudButton>
                                </MudStack>
                            </MudCardContent>
                        </MudCard>
                        
                        <!-- Pattern Presets -->
                        <MudCard Elevation="1">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">
                                        <MudIcon Icon="@Icons.Material.Filled.Pattern" Class="mr-2" />
                                        Patterns
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudGrid>
                                    <MudItem xs="4">
                                        <MudButton Variant="Variant.Outlined" 
                                                   FullWidth="true"
                                                   Size="Size.Small"
                                                   OnClick="InitializeCircle">
                                            Circle
                                        </MudButton>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudButton Variant="Variant.Outlined" 
                                                   FullWidth="true"
                                                   Size="Size.Small"
                                                   OnClick="InitializeOrbium">
                                            Orbium
                                        </MudButton>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudButton Variant="Variant.Outlined" 
                                                   FullWidth="true"
                                                   Size="Size.Small"
                                                   OnClick="InitializeGeminium">
                                            Geminium
                                        </MudButton>
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                        
                        <!-- Grid Settings -->
                        <MudCard Elevation="1">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">
                                        <MudIcon Icon="@Icons.Material.Filled.GridOn" Class="mr-2" />
                                        Grid Settings
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudStack Spacing="3">
                                    <MudSlider T="int" 
                                               Value="gridSize" 
                                               Min="24" Max="128" Step="8"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0}×{0}"
                                               ValueChanged="OnGridSizeChanged"
                                               Color="Color.Primary">
                                        <MudText Typo="Typo.body2">Grid Size</MudText>
                                    </MudSlider>
                                    
                                    <MudSwitch @bind-Value="lenia.UseAdaptiveQuality" 
                                               Label="Adaptive Quality" 
                                               Color="Color.Primary" />
                                    
                                    <MudAlert Severity="Severity.Info" Dense="true" NoIcon="true">
                                        Quality: @lenia.ProcessingQuality%
                                    </MudAlert>
                                </MudStack>
                            </MudCardContent>
                        </MudCard>
                        
                        <!-- Physics Parameters -->
                        <MudCard Elevation="1">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">
                                        <MudIcon Icon="@Icons.Material.Filled.Science" Class="mr-2" />
                                        Physics
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudStack Spacing="3">
                                    <MudSlider T="float" 
                                               @bind-Value="lenia.R" 
                                               Min="2.0f" Max="10.0f" Step="0.1f"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0:F1}"
                                               Color="Color.Secondary">
                                        <MudText Typo="Typo.body2">Radius (R)</MudText>
                                    </MudSlider>
                                    
                                    <MudSlider T="float" 
                                               @bind-Value="lenia.DeltaT" 
                                               Min="0.01f" Max="0.5f" Step="0.01f"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0:F2}"
                                               Color="Color.Secondary">
                                        <MudText Typo="Typo.body2">Time Step (Δt)</MudText>
                                    </MudSlider>
                                    
                                    <MudSlider T="float" 
                                               @bind-Value="lenia.Mu" 
                                               Min="0.0f" Max="0.5f" Step="0.001f"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0:F3}"
                                               Color="Color.Tertiary">
                                        <MudText Typo="Typo.body2">Growth μ</MudText>
                                    </MudSlider>
                                    
                                    <MudSlider T="float" 
                                               @bind-Value="lenia.Sigma" 
                                               Min="0.001f" Max="0.1f" Step="0.001f"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0:F3}"
                                               Color="Color.Tertiary">
                                        <MudText Typo="Typo.body2">Growth σ</MudText>
                                    </MudSlider>
                                </MudStack>
                            </MudCardContent>
                        </MudCard>
                        
                        <!-- Performance -->
                        <MudCard Elevation="1">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">
                                        <MudIcon Icon="@Icons.Material.Filled.Speed" Class="mr-2" />
                                        Performance
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudStack Spacing="3">
                                    <MudSlider T="int" 
                                               Value="targetFps" 
                                               Min="10" Max="120" Step="5"
                                               ValueLabel="true"
                                               ValueLabelFormat="{0} FPS"
                                               ValueChanged="OnFpsChanged"
                                               Color="Color.Success">
                                        <MudText Typo="Typo.body2">Target FPS</MudText>
                                    </MudSlider>
                                    
                                    <MudPaper Class="pa-3" Elevation="0">
                                        <MudStack Spacing="2">
                                            <MudGrid>
                                                <MudItem xs="4">
                                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">FPS</MudText>
                                                    <MudText Typo="Typo.h6" Color="@GetFpsColor()">
                                                        @actualFps.ToString("F0")
                                                    </MudText>
                                                </MudItem>
                                                <MudItem xs="4">
                                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">Update</MudText>
                                                    <MudText Typo="Typo.body2">
                                                        @updateTimeMs.ToString("F0")ms
                                                    </MudText>
                                                </MudItem>
                                                <MudItem xs="4">
                                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">Render</MudText>
                                                    <MudText Typo="Typo.body2">
                                                        @renderTimeMs.ToString("F0")ms
                                                    </MudText>
                                                </MudItem>
                                            </MudGrid>
                                        </MudStack>
                                    </MudPaper>
                                </MudStack>
                            </MudCardContent>
                        </MudCard>
                        
                    </MudStack>
                    </div>
                </MudStack>
            </MudPaper>
        </MudItem>
    </MudGrid>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private LeniaScalable lenia = new(32, 32, 60);
    private LeniaCanvas? leniaCanvas;
    private bool isRunning = false;
    private int targetFps = 60;
    private int gridSize = 32;
    private Timer? updateTimer;
    
    private double actualFps = 0;
    private double updateTimeMs = 0;
    private double renderTimeMs = 0;
    private DateTime lastFrameTime = DateTime.Now;
    private int frameCount = 0;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await StartAnimation();
        }
    }
    
    private void TogglePlayPause()
    {
        isRunning = !isRunning;
    }
    
    private void Reset()
    {
        lenia = new LeniaScalable(gridSize, gridSize, targetFps);
        InvokeAsync(async () => await RenderFrame());
    }
    
    private void InitializeCircle()
    {
        lenia.InitializeCircle(gridSize / 2, gridSize / 2, gridSize / 6);
        InvokeAsync(async () => await RenderFrame());
    }
    
    private void OnGridSizeChanged(int newSize)
    {
        gridSize = newSize;
        lenia.ResizeGrid(gridSize, gridSize);
        InvokeAsync(async () => await RenderFrame());
    }
    
    private void InitializeOrbium()
    {
        lenia.InitializeOrbium();
        InvokeAsync(async () => await RenderFrame());
    }
    
    private void InitializeGeminium()
    {
        lenia.InitializeGeminium();
        InvokeAsync(async () => await RenderFrame());
    }
    
    private void OnFpsChanged(int newFps)
    {
        targetFps = newFps;
        lenia.SetTargetFPS(targetFps);
        RestartTimer();
    }
    
    private void RestartTimer()
    {
        updateTimer?.Dispose();
        if (targetFps > 0)
        {
            updateTimer = new Timer(async (_) =>
            {
                if (isRunning)
                {
                    var sw = System.Diagnostics.Stopwatch.StartNew();
                    lenia.Update();
                    sw.Stop();
                    updateTimeMs = sw.Elapsed.TotalMilliseconds;
                    
                    sw.Restart();
                    await InvokeAsync(async () => await RenderFrame());
                    sw.Stop();
                    renderTimeMs = sw.Elapsed.TotalMilliseconds;
                    
                    UpdateFpsCounter();
                }
            }, null, 0, (long)(1000 / targetFps));
        }
    }
    
    private void UpdateFpsCounter()
    {
        frameCount++;
        var now = DateTime.Now;
        var elapsed = (now - lastFrameTime).TotalSeconds;
        
        if (elapsed >= 1.0)
        {
            actualFps = frameCount / elapsed;
            frameCount = 0;
            lastFrameTime = now;
            InvokeAsync(StateHasChanged);
        }
    }
    
    private Task StartAnimation()
    {
        RestartTimer();
        return Task.CompletedTask;
    }
    
    private async Task RenderFrame()
    {
        if (leniaCanvas != null)
        {
            await leniaCanvas.RenderFrame();
        }
    }
    
    private Color GetFpsColor()
    {
        return actualFps switch
        {
            >= 50 => Color.Success,
            >= 30 => Color.Warning,
            _ => Color.Error
        };
    }
    
    public void Dispose()
    {
        updateTimer?.Dispose();
    }
}